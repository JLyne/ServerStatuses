import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.not-null.co.uk/releases/" }
    maven { url "https://papermc.io/repo/repository/maven-public/" }
    maven { url 'https://repo.mattmalec.com/repository/releases'}
}

dependencies {
    implementation 'com.mattmalec:Pterodactyl4J:2.BETA_140'
    compileOnly 'com.velocitypowered:velocity-api:3.2.0-SNAPSHOT'
    compileOnly 'uk.co.notnull:ProxyQueuesAPI:1.4'

    annotationProcessor 'com.velocitypowered:velocity-api:3.2.0-SNAPSHOT'
}

group = 'uk.co.notnull'
version = '1.0-SNAPSHOT'

java.sourceCompatibility = JavaVersion.VERSION_17
java.targetCompatibility = JavaVersion.VERSION_17

tasks {
    processResources {
        from("${project.rootDir}/src/main/resources") {
            duplicatesStrategy = DuplicatesStrategy.INCLUDE
            project.properties.findAll().each {
                prop ->
                    if (prop.value != null && prop.value instanceof java.lang.String) {
                        filter(ReplaceTokens, tokens: [(prop.key): prop.value])
                        filter(ReplaceTokens, tokens: [('project.' + prop.key): prop.value])
                    }
            }
        }
    }

    compileJava {
        options.compilerArgs += ["-Xlint:all", "-Xlint:-processing"]
        options.encoding = 'UTF-8'
    }

    build {
        dependsOn(shadowJar)
    }

    shadowJar {
        archiveClassifier.set('')
        relocate 'cloud.commandframework', 'uk.co.notnull.proxydiscord.shaded.cloud'
    }
}
